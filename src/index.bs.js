// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var ReactDom = require("react-dom");
var Clipboard = require("./clipboard");
var Converter = require("./converter");
var SampleData$ReactResTest = require("./SampleData.bs.js");

function copyOutputToClipboard(prim) {
  Clipboard.copyOutputToClipboard();
  
}

function convert(param) {
  var inputDom = document.getElementById("inputHtml");
  var inputText = inputDom.value;
  var convertedText = Converter.convertWithIntroOutro(inputText);
  var tmp = document.getElementById("outputReScript");
  tmp.innerText = convertedText;
  
}

function Index$App(Props) {
  React.useEffect(function () {
        convert(undefined);
        
      });
  return React.createElement("div", undefined, React.createElement("div", {
                  className: "flex"
                }, React.createElement("div", undefined, React.createElement("textarea", {
                          defaultValue: SampleData$ReactResTest.initialData,
                          id: "inputHtml",
                          onFocus: (function ($$event) {
                              return $$event.currentTarget.select();
                            })
                        }), React.createElement("button", {
                          className: "convert",
                          onClick: (function (param) {
                              return convert(undefined);
                            })
                        }, "1. Convert HTML to ReScript JSX component")), React.createElement("div", undefined, React.createElement("p", {
                          id: "outputReScript"
                        }), React.createElement("button", {
                          className: "copyToClipboard",
                          onClick: (function (param) {
                              Clipboard.copyOutputToClipboard();
                              
                            })
                        }, "2. Copy to clipboard"))));
}

var App = {
  make: Index$App
};

var root = document.querySelector("#root");

if (root == null) {
  console.log("Error: could not find react element");
} else {
  ReactDom.render(React.createElement(Index$App, {}), root);
}

exports.copyOutputToClipboard = copyOutputToClipboard;
exports.convert = convert;
exports.App = App;
/* root Not a pure module */
