// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as LzString from "lz-string";
import * as ReactDom from "react-dom";
import * as Clipboard from "./clipboard";
import * as Converter from "./converter";
import * as LodashDebounce from "lodash.debounce";
import * as RootUI$ReactResTest from "./RootUI.bs.js";
import * as SampleTemplate$ReactResTest from "./sampleTemplate.bs.js";

import "./index.css"
;

function copyOutputToClipboard(prim) {
  Clipboard.copyOutputToClipboard();
  
}

function convert(param) {
  var inputDom = document.getElementById("inputHtml");
  var inputText = inputDom.value;
  var convertedText = Converter.convertWithIntroOutro(inputText);
  var tmp = document.getElementById("outputReScript");
  tmp.innerText = convertedText;
  
}

var updateConversionResult = LodashDebounce(convert, 150);

function s(prim) {
  return prim;
}

var clipboardIcon = React.createElement("svg", {
      fill: "none",
      stroke: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg"
    }, React.createElement("path", {
          d: "M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3",
          strokeLinecap: "round",
          strokeLinejoin: "round",
          strokeWidth: "2"
        }));

var playIcon = React.createElement("svg", {
      fill: "currentColor",
      viewBox: "0 0 20 20",
      xmlns: "http://www.w3.org/2000/svg"
    }, React.createElement("path", {
          clipRule: "evenodd",
          d: "M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z",
          fillRule: "evenodd"
        }));

function Index$App(Props) {
  React.useEffect(function () {
        convert(undefined);
        
      });
  var editorStyle = {
    height: "calc(100vh - 250px)"
  };
  return React.createElement(RootUI$ReactResTest.make, {
              children: React.createElement("div", undefined, React.createElement("div", {
                        className: "mt-4 md:grid grid-cols-2"
                      }, React.createElement("div", {
                            className: "mr-4"
                          }, React.createElement("p", {
                                className: "block mb-2 text-gray-600 text-sm"
                              }, "Paste your HTML below"), React.createElement("textarea", {
                                defaultValue: SampleTemplate$ReactResTest.template,
                                className: "block w-full bg-white p-4 font-mono text-xs border border-blue-200 overflow-scroll",
                                id: "inputHtml",
                                style: editorStyle,
                                onFocus: (function (evt) {
                                    return evt.currentTarget.select();
                                  }),
                                onChange: (function (param) {
                                    return Curry._1(updateConversionResult, undefined);
                                  })
                              })), React.createElement("div", {
                            className: "text-white bg-gray-900"
                          }, React.createElement("div", {
                                className: "mt-2 md:mt-0 md:grid grid-cols-2"
                              }, React.createElement("button", {
                                    className: "col-span-1 flex items-center w-full text-gray-100 bg-blue-800 text-sm p-1 md:text-base md:p-2 hover:bg-indigo-900 hover:text-white",
                                    id: "btn-copyToClipboard",
                                    onClick: (function (param) {
                                        Clipboard.copyOutputToClipboard();
                                        
                                      })
                                  }, React.createElement("div", {
                                        className: "w-6 h-6 ml-2 mr-2"
                                      }, clipboardIcon), React.createElement("p", undefined, "Copy to clipboard")), React.createElement("button", {
                                    className: "col-span-1 flex items-center w-full text-gray-100 bg-indigo-800 text-sm p-1 md:text-base md:p-2 hover:bg-blue-900 hover:text-white",
                                    onClick: (function (param) {
                                        window.open("https://rescript-lang.org/try?code=" + LzString.compressToEncodedURIComponent(document.getElementById("outputReScript").innerText));
                                        
                                      })
                                  }, React.createElement("div", {
                                        className: "w-6 h-6 ml-2 mr-2"
                                      }, playIcon), React.createElement("p", undefined, "Open in ReScript playground"))), React.createElement("p", {
                                className: "p-6 text-xs font-mono whitespace-pre overflow-scroll",
                                id: "outputReScript",
                                style: editorStyle
                              }))))
            });
}

var App = {
  make: Index$App
};

var root = document.querySelector("#root");

if (root == null) {
  console.log("Error: could not find react element");
} else {
  ReactDom.render(React.createElement(Index$App, {}), root);
}

export {
  copyOutputToClipboard ,
  convert ,
  updateConversionResult ,
  s ,
  clipboardIcon ,
  playIcon ,
  App ,
  
}
/*  Not a pure module */
